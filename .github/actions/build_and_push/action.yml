name: Docker Build and Push
inputs:
  refspec:
    description: "Commit to check out"
    required: true
    type: string
  docker_tag:
    description: "Commit short SHA"
    required: true
    type: string
  ecr_repository_name:
    required: true
    type: string
  aws_region:
    required: true
    type: string
  aws_access_key_id:
    required: true
    type: string
  aws_session_token:
    required: false
    type: string
  aws_secret_access_key:
    required: true
    type: string
  dockerfile_name:
    required: false
    type: string
  build_dir:
    required: false
    type: string

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.refspec }}
        fetch-depth: 0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}
        aws-session-token: ${{ inputs.aws_session_token }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build docker image
      shell: bash
      env:
        ECR_REPOSITORY: ${{ inputs.ecr_repository_name }}
        IMAGE_TAG: ${{ inputs.docker_tag }}
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f ${{ inputs.dockerfile_name }} ${{ inputs.build_dir }}

    - name: Tag and push image to Amazon ECR
      shell: bash
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr_repository_name }}
        IMAGE_TAG: ${{ inputs.docker_tag }}
      run: |
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
